import{_ as e,c as s,o as a,b as n}from"./app.ac902fba.js";const v=JSON.parse('{"title":"移动端","description":"","frontmatter":{},"headers":[{"level":2,"title":"兼容性问题","slug":"兼容性问题","link":"#兼容性问题","children":[]},{"level":2,"title":"微信浏览器（小程序、微信、企业微信环境，公众号开发）","slug":"微信浏览器-小程序、微信、企业微信环境-公众号开发","link":"#微信浏览器-小程序、微信、企业微信环境-公众号开发","children":[{"level":3,"title":"小程序webview","slug":"小程序webview","link":"#小程序webview","children":[]}]}],"relativePath":"移动端/index.md"}'),l={name:"移动端/index.md"},i=n(`<h1 id="移动端" tabindex="-1">移动端 <a class="header-anchor" href="#移动端" aria-hidden="true">#</a></h1><h2 id="兼容性问题" tabindex="-1">兼容性问题 <a class="header-anchor" href="#兼容性问题" aria-hidden="true">#</a></h2><ol><li>在iOS App下的webview点击后出现阴影处理。</li></ol><div class="language-scss line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">// 解决 ios App 下点击阴影的问题</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#FFCB6B;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">-webkit-tap-highlight-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">rgba</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">-webkit-tap-highlight-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">transparent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="微信浏览器-小程序、微信、企业微信环境-公众号开发" tabindex="-1">微信浏览器（小程序、微信、企业微信环境，公众号开发） <a class="header-anchor" href="#微信浏览器-小程序、微信、企业微信环境-公众号开发" aria-hidden="true">#</a></h2><h3 id="小程序webview" tabindex="-1">小程序webview <a class="header-anchor" href="#小程序webview" aria-hidden="true">#</a></h3><p>小程序官方webview文档<a href="https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/miniprogram/dev/component/web-view.html</a></p><p>微信jssdk使用文档<a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#0" target="_blank" rel="noreferrer">https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/JS-SDK.html#0</a></p><ol><li>小程序并不会实时接收到webview中的postMessage事件，只会在特定时机（小程序后退、组件销毁、分享）触发并收到消息。e.detail = { data }，data是多次 postMessage 的参数组成的数组</li><li>单页应用的路由跳转是不会触发webview的bindload事件。</li><li>在webview中，可以用微信jssdk的接口调用小程序的能力</li><li>官方tips <ul><li>网页内 iframe 的域名也需要配置到域名白名单。</li><li>开发者工具上，可以在 web-view 组件上通过右键 - 调试，打开 web-view 组件的调试。</li><li>每个页面只能有一个 web-view，web-view 会自动铺满整个页面，并覆盖其他组件。</li><li>web-view 网页与小程序之间不支持除 JSSDK 提供的接口之外的通信。</li><li>在 iOS 中，若存在JSSDK接口调用无响应的情况，可在 web-view 的 src 后面加个#wechat_redirect解决。</li><li>避免在链接中带有中文字符，在 iOS 中会有打开白屏的问题，建议加一下 encodeURIComponent</li></ul></li></ol>`,9),p=[i];function o(r,t,c,d,h,b){return a(),s("div",null,p)}const D=e(l,[["render",o]]);export{v as __pageData,D as default};
